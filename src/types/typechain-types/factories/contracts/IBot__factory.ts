/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { IBot, IBotInterface } from "../../contracts/IBot";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Disbursement",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TicketPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "disburse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "iFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initPrice",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "order",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overdueRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "purchases",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060016000819055805460ff1916905560256029565b60d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560785760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b610a08806100e86000396000f3fe6080604052600436106100955760003560e01c80635c975abb116100595780635c975abb1461014d578063842a77d31461017057806398d5fdca146101ab578063bf15071d146101c0578063edca914c146101d657600080fd5b806302d05d3f146100a15780631794bb3c146100de5780631c8ce890146100f357806320b58139146101135780634f8ee17c1461013857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506002546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec3660046108e0565b6101de565b005b3480156100ff57600080fd5b506100f161010e36600461091c565b610357565b34801561011f57600080fd5b506001546100c19061010090046001600160a01b031681565b34801561014457600080fd5b506100f161040d565b34801561015957600080fd5b5060015460ff1660405190151581526020016100d5565b34801561017c57600080fd5b5061019d61018b36600461091c565b60086020526000908152604090205481565b6040519081526020016100d5565b3480156101b757600080fd5b5061019d6105b0565b3480156101cc57600080fd5b5061019d60035481565b6100f16105fb565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156102245750825b905060008267ffffffffffffffff1660011480156102415750303b155b90508115801561024f575080155b1561026d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561029757845460ff60401b1916600160401b1785555b6001600160a01b0388166102be5760405163d92e233d60e01b815260040160405180910390fd5b60018054610100600160a81b0319166101006001600160a01b038b81169190910291909117909155600280546001600160a01b03191691891691909117905560098690556000600355831561034d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b60015461010090046001600160a01b031633146103b35760405162461bcd60e51b815260206004820152601560248201527413db9b1e48199858dd1bdc9e4818d85b8818d85b1b605a1b60448201526064015b60405180910390fd5b476103be8282610793565b6103c661082d565b816001600160a01b03167f2d9872944dd7b4c730a8217ddf85e6d5f1263f81afaec4b7f7f641b69cb613888260405161040191815260200190565b60405180910390a25050565b610415610876565b6007546104249061a8c0610954565b42116104695760405162461bcd60e51b8152602060048201526014602482015273546f6f20736f6f6e20746f20646973627572736560601b60448201526064016103aa565b6006546001600160a01b0316600090815260086020526040902054806104d15760405162461bcd60e51b815260206004820152601760248201527f4e6f20707572636861736520746f20646973627572736500000000000000000060448201526064016103aa565b600060646104e083604b61096d565b6104ea9190610984565b6006549091506001600160a01b031633036105365760055460000361050e57476005555b6064600554600f61051f919061096d565b6105299190610984565b6105339082610954565b90505b6105403382610793565b6006546001600160a01b031660009081526008602052604081205560015460ff1661056d5761056d61082d565b60405181815233907f2d9872944dd7b4c730a8217ddf85e6d5f1263f81afaec4b7f7f641b69cb613889060200160405180910390a250506105ae6001600055565b565b60006003546000036105c3575060095490565b6003546105d1906001610954565b6003546105df906002610954565b6009546105ec919061096d565b6105f69190610984565b905090565b6106036108a0565b600061060d6105b0565b9050348111156106515760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c185e5b595b9d608a1b60448201526064016103aa565b600061065e606483610984565b61066990600f61096d565b90506000610678606484610984565b61068390600f61096d565b905060008161069284866109a6565b61069c91906109a6565b90506106bb60018054906101000a90046001600160a01b031684610793565b6002546106d1906001600160a01b031683610793565b6106db3082610793565b60006106e785346109a6565b905080156106f9576106f93382610793565b60098590556003805490600061070e836109b9565b90915550503360009081526008602052604081208054849290610732908490610954565b9091555050600680546001600160a01b031916339081179091554260078190556040805188815260208101929092527f2a91574e12ad96234e84923e146b0946ecfb871cd8d5534dc1fdcbe87a7c01b3910160405180910390a25050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107e0576040519150601f19603f3d011682016040523d82523d6000602084013e6107e5565b606091505b50509050806108285760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016103aa565b505050565b6108356108a0565b6001805460ff1916811790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b60026000540361089957604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60015460ff16156105ae5760405163d93c066560e01b815260040160405180910390fd5b80356001600160a01b03811681146108db57600080fd5b919050565b6000806000606084860312156108f557600080fd5b6108fe846108c4565b925061090c602085016108c4565b9150604084013590509250925092565b60006020828403121561092e57600080fd5b610937826108c4565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156109675761096761093e565b92915050565b80820281158282048414176109675761096761093e565b6000826109a157634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156109675761096761093e565b6000600182016109cb576109cb61093e565b506001019056fea264697066735822122015b5c6ad798404c1cdd187b6d6f528880ad651435c9dbdcbd42899f81ec7ab9d64736f6c634300081b0033";

type IBotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IBotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IBot__factory extends ContractFactory {
  constructor(...args: IBotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IBot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IBot__factory {
    return super.connect(runner) as IBot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IBotInterface {
    return new Interface(_abi) as IBotInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IBot {
    return new Contract(address, _abi, runner) as unknown as IBot;
  }
}
