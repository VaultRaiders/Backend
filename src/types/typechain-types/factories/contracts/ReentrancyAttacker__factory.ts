/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ReentrancyAttacker,
  ReentrancyAttackerInterface,
} from "../../contracts/ReentrancyAttacker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bot",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "bot",
    outputs: [
      {
        internalType: "contract iBot",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50604051610221380380610221833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b6101948061008d6000396000f3fe60806040526004361061002d5760003560e01c806310814c37146100b65780639e5faafc146100f257600080fd5b366100b157600054346001600160a01b0390911631106100af5760008054906101000a90046001600160a01b03166001600160a01b031663edca914c346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561009557600080fd5b505af11580156100a9573d6000803e3d6000fd5b50505050505b005b600080fd5b3480156100c257600080fd5b506000546100d6906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100af60008054906101000a90046001600160a01b03166001600160a01b031663edca914c346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561014357600080fd5b505af1158015610157573d6000803e3d6000fd5b505050505056fea26469706673582212201bea2d6519b1b9b70fffff1096b30acf601c25b918cb377a2329f196385a42f764736f6c634300081b0033";

type ReentrancyAttackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrancyAttackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrancyAttacker__factory extends ContractFactory {
  constructor(...args: ReentrancyAttackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _bot: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_bot, overrides || {});
  }
  override deploy(
    _bot: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_bot, overrides || {}) as Promise<
      ReentrancyAttacker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReentrancyAttacker__factory {
    return super.connect(runner) as ReentrancyAttacker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrancyAttackerInterface {
    return new Interface(_abi) as ReentrancyAttackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReentrancyAttacker {
    return new Contract(address, _abi, runner) as unknown as ReentrancyAttacker;
  }
}
